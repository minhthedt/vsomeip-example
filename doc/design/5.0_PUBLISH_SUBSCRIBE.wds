@startuml
autonumber
box "Device1(192.168.1.3)" 
participant "clientA(App1)" as clientA
participant "routingmanagerd" as rout1
end box


box "Device2(192.168.1.4)" 
participant "routingmanagerd" as rout2
participant "ServiceA(App3)" as ServiceA
end box


ServiceA->rout2: offer_event(serviceId, instanceId, **event_Id, event_group_ids**)
clientA->rout1: request_event(serviceId, instanceId, **event_Id, event_group_ids**)
clientA->rout1: subscribe(serviceId, instanceId, **event_group_ids**)
ref over clientA, ServiceA
FIND/OFFER service
end ref
loop 1000ms (configable "cyclic_offer_delay")
rout2->rout1: (SOMEIP/SD) OFFER Message
note right rout1
src: 192.168.1.3:30490
dst: 192.168.1.4:30490 **<color green>(unicast address)</color>**
header {
    Service ID: 0xffff
    Method ID: 0x8100
    ...
}
payload {
    **<color blue>Type: 0x06 (subscribe eventgroup)</color>**
    serviceId: 0x1234
    instanceId: 0x5678
    ...
    ClientA EndPoint {
        ip: 192.168.1.3
        udp port: xxxx
        ...
    }
}
end note
rout1->rout2: (SOMEIP/SD) SUBSCRIBE Message
rout2->rout1: (SOMEIP/SD) SUBSCRIBE_ACK Message
end

ServiceA->rout2: notify(serviceId, instanceId, **event_id**, payload)
rout2->rout1: (SOME/IP) NOTFICATION Message
rout1->clientA: onMessage(...)
@enduml
