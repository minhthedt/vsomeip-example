@startuml
autonumber
box "Device1(192.168.1.3)" 
participant "clientA(App1)" as clientA
participant "routingmanagerd" as rout1
end box


box "Device2(192.168.1.4)" 
participant "routingmanagerd" as rout2
participant "ServiceA(App3)" as ServiceA
end box
ref over clientA, serviceA
Load Configuration vsomeip.json
end ref
ServiceA->rout2: offer_service(serviceId, instanceId)
loop 1000ms (configable "cyclic_offer_delay")
rout2->rout1: (SOMEIP/SD) OFFER Message
end
note right rout1
src: 192.168.1.4:30490
dst: 224.224.224.245:30490 **<color blue>(mutilcast address)</color>**
header {
    Service ID: 0xffff
    Method ID: 0x8100
    ...
}
payload {
    **<color blue>Type: 0x01 (offer service)</color>**
    serviceId: 0x1234
    instanceId: 0x5678
    ...
    ServiceA EndPoint {
        ip: 192.168.1.4
        tcp port: 30500
        udp port: 30501
        ...
    }
}
end note

clientA->rout1: request_service(serviceId, instanceId)
rout1->rout2: (SOMEIP/SD) FIND message
rout2->rout1: (SOMEIP/SD) OFFER Message
rout1->clientA: callback(serviceAstatus)
opt serviceAstatus = available
clientA->rout1: send(reliable, message)
note right rout1
(reliable = true)  => TCP: send to 192.168.1.4:30500
(reliable = false) => UDP: send to 192.168.1.4:30501
end note
rout1->rout2: (SOMEIP) REQUEST Message
rout2->ServiceA: onMessage(...)
end
@enduml
